version: '3'

services:

    mariadb:
      container_name: mariadb-container
      build:
        context: ./srcs/requirements/mariadb
        dockerfile: Dockerfile-mariadb
      image: mariadb
      restart: unless-stopped
      volumes:
        - data:/var/lib/mysql
      env_file:
        - ./srcs/.env
      networks:
        - wp-nginx-mariadb
      healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
        interval: 10s
        timeout: 5s
        retries: 3

    wordpress:
      container_name: wordpress-container
      build:
        context: ./srcs/requirements/wordpress
        dockerfile: Dockerfile-wordpress
      image: wordpress
      restart: unless-stopped
      volumes:
        - www-data:/usr/share/webapps/wordpress
      env_file : ./srcs/.env
      networks:
        - wp-nginx-mariadb
      depends_on:
        mariadb:
          condition: service_healthy
        redis:
          condition: service_healthy
      healthcheck:
        test: ["CMD-SHELL", "wp core is-installed --allow-root"]
        interval: 20s
        timeout: 10s
        retries: 3

    nginx:
      container_name: nginx-container
      build:
        context: ./srcs/requirements/nginx
        dockerfile: Dockerfile-nginx
      image: nginx
      restart: unless-stopped
      volumes:
        - www-data:/usr/share/webapps/wordpress
        - adminer-file:/usr/share/webapps/adminer
      ports:
        - 443:443
        - 80:80
        - 8080:8080
      networks:
        - wp-nginx-mariadb
      depends_on:
        wordpress:
          condition: service_healthy
      
    redis:
      container_name: redis-container
      build:
        context: './srcs/requirements/bonus/redis'
        dockerfile: Dockerfile-redis
      image: redis
      restart: unless-stopped
      env_file : ./srcs/.env
      networks:
        - wp-nginx-mariadb
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 3

    vsftpd:
      container_name: vsftpd-container
      build:
        context: './srcs/requirements/bonus/vsftpd'
        dockerfile: Dockerfile-vsftpd
      image: vsftpd
      volumes:
        - www-data:/app/wordpress
      env_file : ./srcs/.env
      networks:
        - wp-nginx-mariadb
      restart: unless-stopped
      ports:
        - 20:20
        - 21:21
        - 990:990
        - 30000-30010:30000-30010
      depends_on:
        wordpress:
          condition: service_healthy

    adminer:
      container_name: adminer-container
      build:
        context: './srcs/requirements/bonus/adminer'
        dockerfile: Dockerfile-adminer
      image: adminer
      volumes:
        - adminer-file:/usr/share/webapps/adminer
      env_file : ./srcs/.env
      networks:
        - wp-nginx-mariadb
      restart: unless-stopped
      depends_on:
        mariadb:
          condition: service_healthy
      
    nest:
      container_name: nest-container
      build:
        context: './srcs/requirements/bonus/nest'
        dockerfile: Dockerfile-nestjs
      image: nest
      volumes:
        - /home/dtoure/inception/srcs/requirements/bonus/nest:/app/nest
      ports:
        - 3000:3000

networks:
  wp-nginx-mariadb:

volumes:
  adminer-file:
    name: adminer-file
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/dtoure/data/adminer
  www-data:
    name: www-data
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/dtoure/data/wordpress
  data:
    name: data
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/dtoure/data/mariadb